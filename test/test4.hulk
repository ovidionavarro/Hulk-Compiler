
let a = 42 in let mod = a % 3 in
    print(
        if (mod == 0) "Magic"
        elif (mod % 3 == 1) "Woke"
        else "Dumb"
    );
protocol Equatable extends Hashable {
    equals(other: Object): Boolean;
}
let pt = new Point(3,4) in
    print("x: " @ pt.getX() @ "; y: " @ pt.getY());

protocol Equatable extends Hashable {
    equals(other: Object): Boolean;
}protocol Equatable extends Hashable {
    equals(other: Object): Boolean;
}
let a = 42 in let mod = a % 3 in
    print(
        if (mod == 0) "Magic"
        elif (mod % 3 == 1) "Woke"
        else "Dumb"
    );

type Point {
    x = 0;
    y = 0;

    getX() => self.x;
    getY() => self.y;

    setX(x) => self.x := x;
    setY(y) => self.y := y;
}
type Point {
    x = 0;
    y = 0;

    getX() => self.x;
    getY() => self.y;

    setX(x) => self.x := x;
    setY(y) => self.y := y;
}